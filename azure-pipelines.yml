trigger:
- main

pool:
  vmImage: ubuntu-latest

variables:
  imageName: 'imagenes_oswaldo'

steps:
- script: echo Hello, Israel estamos intentando !

# Paso para instalar Docker
- script: |
    echo "Instalando Docker..."
    sudo apt-get update
    sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
    sudo apt-get update
    sudo apt-get install -y docker-ce docker-ce-cli containerd.io
    sudo usermod -aG docker $USER
    echo "Docker instalado correctamente."
  displayName: 'Instalar Docker'

# Paso para descargar el archivo images-lis.txt desde GitHub
- script: |
    echo "Descargando images-lis.txt desde GitHub..."
    curl -o Imagenes/images-lis.txt https://raw.githubusercontent.com/rapanuti/Imagenes/main/images-lis.txt
    echo "Archivo descargado correctamente."
  displayName: 'Descargar images-lis.txt'

# Paso para leer y procesar las imágenes
- task: Bash@3
  displayName: 'Leer imágenes del txt del DockerHUB'
  inputs:
    targetType: 'inline'
    script: |
      if [ ! -f "Imagenes/images-lis.txt" ]; then
        echo "Error: El archivo Imagenes/images-lis.txt no existe."
        exit 1
      fi

      echo "Contenido del archivo Imagenes/images-lis.txt:"
      cat Imagenes/images-lis.txt

      while IFS= read -r image; do
        echo "Procesando imagen: $image"
        
        # Escaneo de vulnerabilidades con Trivy
        echo "Escaneando $image con Trivy..."
        if ! docker run --rm -v /var/run/docker.sock:/var/run/docker.sock aquasec/trivy image --exit-code 0 $image > trivy_results.json; then
          echo "Error: Fallo al escanear la imagen $image con Trivy."
          exit 1
        fi

        # Verifica si Trivy encontró vulnerabilidades
        if grep -q "Vulnerability ID" trivy_results.json; then
          echo "Se encontraron vulnerabilidades en $image"
          exit 1
        else
          echo "No se encontraron vulnerabilidades en $image"
          # Ejecuta docker pull solo si no hay vulnerabilidades
          echo "Descargando imagen $image..."
          docker pull $image
        fi
      done < Imagenes/images-lis.txt